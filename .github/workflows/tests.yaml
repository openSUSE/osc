name: 'tests'

on:
  pull_request:
    branches: ['master']
    paths:
      - '.github/**'
      - '**.py'
      - 'behave/**'
      - 'tests/**'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  unit-ro:
    name: "unit - read only fixtures"
    runs-on: 'ubuntu-latest'
    strategy:
      fail-fast: false

    steps:
      - name: 'Install packages'
        run: |
            sudo apt-get -y update
            sudo apt-get -y --no-install-recommends install git-lfs
            sudo apt-get -y --no-install-recommends install diffstat diffutils git-core python3 python3-cryptography python3-pip python3-rpm python3-ruamel.yaml python3-setuptools python3-urllib3

      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: 'Change owner to root:root'
        run: |
          sudo chown -R root:root tests

      - name: 'Run unit tests'
        run: |
          pip3 config set global.break-system-packages 1
          pip3 install -e .
          python3 -m unittest

  unit:
    name: "unit"
    needs: unit-ro
    runs-on: 'ubuntu-latest'
    strategy:
      fail-fast: false
      matrix:
        # Testing per python-version using actions/setup-python is not possible,
        # because rpm doesn't exist on pypi and cannot be installed via pip on ubuntu.
        # That's why we're going to test on the target distros directly.
        container:

          # Fedora
          - 'registry.fedoraproject.org/fedora:41'
          - 'registry.fedoraproject.org/fedora:42'
          - 'registry.fedoraproject.org/fedora:rawhide'

          # openSUSE
          # leap < 15.2 doesn't contain git-lfs which causes actions/checkout to fail
          - 'registry.opensuse.org/opensuse/leap:15.5'
          - 'registry.opensuse.org/opensuse/leap:15.6'
          - 'registry.opensuse.org/opensuse/tumbleweed'

          # SLE
          - 'registry.suse.com/bci/bci-base:15.7'

          # CentOS Stream
          - 'quay.io/centos/centos:stream9'

          # Debian
          - 'docker.io/library/debian:stable'
          - 'docker.io/library/debian:unstable'

          # Ubuntu
          - 'docker.io/library/ubuntu:latest'

    container:
      image: ${{ matrix.container }}

    steps:
      - name: 'Install packages (openSUSE)'
        if: ${{ contains(matrix.container, '/opensuse/') }}
        run: |
            zypper -n modifyrepo --disable repo-openh264 || :
            zypper -n --gpg-auto-import-keys refresh
            zypper -n lr --details
            grep -qi tumbleweed /etc/os-release && zypper -n dist-upgrade || zypper -n patch || zypper -n patch
            zypper -n install git-lfs
            zypper -n install diffstat diffutils git-core python3 python3-cryptography python3-pip python3-rpm python3-ruamel.yaml python3-setuptools python3-urllib3

      - name: 'Install packages (SLE)'
        if: ${{ contains(matrix.container, '/bci/bci-base') }}
        run: |
            zypper -n --gpg-auto-import-keys refresh
            zypper -n lr --details
            zypper -n --no-gpg-checks install https://download.opensuse.org/distribution/leap/15.6/repo/oss/x86_64/git-lfs-3.4.0-bp156.1.14.x86_64.rpm
            zypper -n install diffstat diffutils git-core python3 python3-cryptography python3-pip python3-rpm python3-PyYAML python3-setuptools python3-urllib3

      - name: 'Install packages (Fedora/CentOS)'
        if: ${{ contains(matrix.container, '/fedora:') || contains(matrix.container, '/centos:') }}
        run: |
            dnf -y makecache
            dnf -y distro-sync
            dnf -y install git-lfs
            dnf -y install diffstat diffutils git-core python3 python3-cryptography python3-pip python3-rpm python3-ruamel-yaml python3-setuptools python3-urllib3

      - name: 'Install packages (Debian/Ubuntu)'
        if: ${{ contains(matrix.container, '/debian:') || contains(matrix.container, '/ubuntu:') }}
        run: |
            apt-get -y update
            apt-get -y upgrade
            apt-get -y --no-install-recommends install git-lfs
            apt-get -y --no-install-recommends install diffstat diffutils git-core python3 python3-cryptography python3-pip python3-rpm python3-ruamel.yaml python3-setuptools python3-urllib3

      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: 'Run unit tests'
        run: |
          pip3 config set global.break-system-packages 1
          pip3 install -e .
          python3 -m unittest

      - name: 'Generate coverage reports (openSUSE Tumbleweed)'
        if: ${{ contains(matrix.container, '/opensuse/tumbleweed') }}
        run: |
            zypper -n install python3-pytest python3-pytest-cov
            pytest --cov=osc

      - name: 'Upload coverage reports to Codecov (openSUSE Tumbleweed)'
        if: ${{ contains(matrix.container, '/opensuse/tumbleweed') }}
        uses: codecov/codecov-action@v3

  behave:
    name: "behave"
    # to save resources, run only after unit tests have passed
    needs: unit
    runs-on: "ubuntu-latest"
    steps:
      - name: "Install packages"
        run: |
            sudo sh -c '. /etc/os-release; echo "deb [trusted=yes] http://download.opensuse.org/repositories/openSUSE:Tools/xUbuntu_${VERSION_ID} ./" > /etc/apt/sources.list.d/openSUSE-Tools.list'
            sudo apt-get -y update
            sudo apt-get -y --no-install-recommends install git python3-behave diffstat diffutils python3 python3-cryptography python3-pip python3-rpm python3-ruamel.yaml python3-setuptools python3-urllib3 obs-build obs-service-set-version
            # obs-scm-bridge requires libwww-perl (LWP/UserAgent.pm) for downloading assets
            sudo apt-get -y --no-install-recommends install libwww-perl
            # obs-scm-bridge is not available as a package at the moment, install it from github
            sudo pip3 config set global.break-system-packages 1
            sudo pip3 install typeguard
            sudo pip3 install git+https://github.com/openSUSE/obs-scm-bridge
            sudo chmod a+x /usr/local/lib/*/*/obs_scm_bridge
            sudo mkdir -p /usr/lib/obs/service
            sudo ln -s /usr/local/lib/*/*/obs_scm_bridge /usr/lib/obs/service/obs_scm_bridge

      - name: "Checkout sources"
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: "Pull container image"
        run: |
          podman pull ghcr.io/suse-autobuild/obs-server:latest

      - name: "Configure git"
        run: |
            git config --global user.email "admin@example.com"
            git config --global user.name "Admin"

      - name: "Run tests"
        run: |
          cd behave
          OSC_TYPEGUARD=1 behave -Dosc=../osc-wrapper.py -Dgit-obs=../git-obs.py -Dgit-osc-precommit-hook=../git-osc-precommit-hook.py -Dpodman_max_containers=2
